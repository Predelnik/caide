== Build caide in CentOS 6

The purpose of this guide is to build a single executable compatible with as
many Linux distributions as possible. To this end, we need to:

* Link all libraries except for glibc and libgcc statically.
* Build on a system with an old-ish glibc (CentOS 6).

=== 1. Install CentOS 6
You can download installation media for your architecture
https://wiki.centos.org/Download[here]. "Minimal image" is sufficient as we
will install all prerequisites ourselves.

=== 2. Install g++ 4.9

For 64-bit:

[source,bash]
----
yum install centos-release-scl-rh
yum install devtoolset-3-gcc devtoolset-3-gcc-c++
----

For 32-bit:
[source,bash]
----
yum install wget
cd /etc/yum.repos.d
wget http://linuxsoft.cern.ch/cern/scl/slc6-scl.repo
yum --nogpgcheck install devtoolset-3-gcc devtoolset-3-gcc-c++
----

=== 3. Install other prerequisites

[source,bash]
----
yum install wget git zlib-devel make automake gmp-devel libffi zlib xz tar gnupg python27 cmake zlib-static gmp-static
----

=== 4. Install stack

For 64-bit:
[source,bash]
----
cd /etc/yum.repos.d
wget https://s3.amazonaws.com/download.fpcomplete.com/centos/6/fpco.repo
yum install stack
----

For 32-bit:
[source,bash]
----
wget https://www.stackage.org/stack/linux-i386-gmp4
tar -x linux-i386-gmp4
mv linux-i386-gmp4/stack /usr/local/bin
----

=== 5. Add a non-root user

[source,bash]
----
useradd build
passwd build
----

=== 6. Setup build environment

Logout and login under `build` user. +
Add the following lines to `~/.bashrc` to enable newer g++ and python:

[source,bash]
----
source /opt/rh/devtoolset-3/enable
source /opt/rh/python27/enable
----

Create the file `~/.stack/config.yaml` with the following contents:

----
build:
    split-objs: true
----

This will reduce the size of the final executable a little. +
Copy the file
link:../../ghc-linker.py[`ghc-linker.py`] to some place in your `PATH` (for
example, to `~/bin`). We will use this script as a linker because this is the
only way to supply the link options that we need. +
Logout and login to apply changes.


=== 7. Download source code and build

[source,bash]
----
cd ~
git clone https://github.com/slycelote/caide
cd caide
git checkout master
git submodule update --init --recursive
cd libcaide
stack init
stack setup
stack build --ghc-options '-pgml ghc-linker.py'
----

The resulting executable is at `.stack-work/install/**/bin/caide`.

=== 8. Install additional dependencies to run tests

For some of the tests, mono compiler is required:

[source,bash]
----
yum install epel-release
yum install mono-core
----

